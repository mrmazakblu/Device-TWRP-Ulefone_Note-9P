on early-fs
    start vold

on fs
	mkdir /mnt/vendor 0700 root root
	mkdir /mnt/vendor/protect_f 0700 root root
	mkdir /mnt/vendor/protect_s 0700 root root
	mkdir /mnt/vendor/nvdata 0700 root root
	mkdir /mnt/vendor/nvcfg 0700 root root
	mkdir /data/vendor 0700 root root
	mkdir /data/vendor/t6 0755 root root
	mount ext4 /dev/block/platform/bootdevice/by-name/protect1 /mnt/vendor/protect_f
	mount ext4 /dev/block/platform/bootdevice/by-name/protect2 /mnt/vendor/protect_s
	mount ext4 /dev/block/platform/bootdevice/by-name/nvdata /mnt/vendor/nvdata
	mount ext4 /dev/block/platform/bootdevice/by-name/nvcfg /mnt/vendor/nvcfg
	symlink /mnt/vendor/protect_f /vendor/protect_f
	symlink /mnt/vendor/protect_s /vendor/protect_s
	symlink /mnt/vendor/nvcfg /vendor/nvcfg
	symlink /mnt/vendor/nvdata /vendor/nvdata
	write /proc/bootprof "tkcore: prepare system ta path"

	write /proc/bootprof "tkcore: prepare protect_f sfs"
	mkdir /mnt/vendor/protect_f/tee
	setprop vendor.trustkernel.fs.mode 2
	setprop vendor.trustkernel.fs.state ready
	installkey /data
	install_keyring

	init_user0
	start teed

# twrp.apex.loaded=true prop is only for devices with dynamic partitions
# including that prop prevents decryption services from loading
# when entering fastbootd
on property:ro.apex.updateable=true
    start prepdecrypt

on property:vendor.trustkernel.fs.state=ready
	write /proc/bootprof "tkcore: prepare basic"
	mkdir /data/vendor
	mkdir /data/vendor/t6

	write /proc/bootprof "tkcore: prepare sfs"
	mkdir /data/vendor/t6/fs

	write /proc/bootprof "tkcore: prepare service provider ta path"
	mkdir /data/vendor/t6/app

# For non-encrypted case
on property:ro.crypto.state=unencrypted
	setprop vendor.trustkernel.fs.mode 1
	setprop vendor.trustkernel.fs.state ready

# For FDE/encrypted successfully
on property:vold.decrypt=trigger_restart_framework
	setprop vendor.trustkernel.fs.mode 2
	setprop vendor.trustkernel.fs.state ready

# For FBE/encrypted successfully
on property:ro.crypto.type=file && property:ro.crypto.state=encrypted
	setprop vendor.trustkernel.fs.mode 3
	setprop vendor.trustkernel.fs.state ready

on property:vendor.trustkernel.log.state=ready
	write /proc/bootprof "tkcore: prepare log file"
	setprop vendor.trustkernel.log.state enable

service prepdecrypt /system/bin/prepdecrypt.sh
    user root
    group root
    disabled
    oneshot
    seclabel u:r:recovery:s0
    
service gatekeeper-1-0 /system/bin/android.hardware.gatekeeper@1.0-service
    user root
    group root
    disabled
    seclabel u:r:recovery:s0

service keymaster-4-0 /system/bin/android.hardware.keymaster@4.0-service.trustkernel
    user root
    group root
    disabled
    seclabel u:r:recovery:s0

service attestation-1-1 /system/bin/vendor.mediatek.hardware.keymaster_attestation@1.1-service
    interface vendor.mediatek.hardware.keymaster_attestation@1.1::IKeymasterDevice default
    class hal
    user root
    group root
    disabled
    seclabel u:r:recovery:s0

service teed /system/bin/teed \
    --datapath /data/vendor/t6/fs \
    --sptapath /data/vendor/t6/app \
    --systapath /vendor/app/t6 \
    --prot /mnt/vendor/protect_f/tee \
    --logpath /data/vendor/t6/tkcore.log \
    --proprefix vendor.trustkernel
	user root
	group root
    disabled
    seclabel u:r:recovery:s0

